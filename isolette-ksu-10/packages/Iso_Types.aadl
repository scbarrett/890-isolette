--------------------------------------------------------------------------------
-- Iso_Types.aadl (version 10) - 
--
-- Authors: Stephen C. Barrett (scbarrett@ksu.edu) &
--          Brian R. Larson (brl@ksu.edu)
--          Department of Computing & Information Sciences
--
-- Licensed Material - Property of Kansas State University
--------------------------------------------------------------------------------
-- 05: Initial simple units of measure.
--
-- 07: New enumerated type for control & range composite type of temperature.
--
-- 10: Composites for setting desired & alarm temperatures; status & mode.
--------------------------------------------------------------------------------
package Iso_Types
public
with Base_Types, Data_Model;


data heat
  properties
    Data_Model::Data_Representation => Float;
    Data_Model::Measurement_Unit => "KJoule";
end heat;


--------------------------------------------------------------------------------
-- Basic building blocks of following data types.
--------------------------------------------------------------------------------

-- Enumerated type for invalidating & validating signal content.
data valid_flag
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("Invalid","Valid");
end valid_flag;


--------------------------------------------------------------------------------
-- Table A-3: Thermostat monitored variables for Temperature Sensor.
--------------------------------------------------------------------------------

-- Range of air temperatures that can be sensed & measured.
data sensed_temperature_range
  properties
    Data_Model::Real_Range => 68.0 .. 105.0;
    Data_Model::Measurement_Unit => "Fahrenheit";
end sensed_temperature_range;


-- Composite for communicating & validating measured temperature.
data sensed_temperature
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("temp","valid");
  Data_Model::Base_Type => (classifier (sensed_temperature_range),
    classifier (valid_flag));
end sensed_temperature;


--------------------------------------------------------------------------------
-- Table A-4: Thermostat controlled variables for Heat Source (& Alarm). 
--------------------------------------------------------------------------------

-- Enumerated type for deactivating & activating physical entities.
data on_off
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("Off","On");
end on_off;


--------------------------------------------------------------------------------
-- Table A-5: Thermostat monitored variables for Operator Interface. 
--------------------------------------------------------------------------------

-- Range of air temperatures that can be chosen as lower limit for warming.
data lower_desired_temperature_range
  properties
    Data_Model::Real_Range => 97.0 .. 99.0;
    Data_Model::Measurement_Unit => "Fahrenheit";
end lower_desired_temperature_range;


-- Composite for communicating & validating desired temperature.
data lower_desired_temperature
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("temp", "valid");
  Data_Model::Base_Type => (classifier (lower_desired_temperature_range),
    classifier (valid_flag));
end lower_desired_temperature;


-- Range of air temperatures that can be chosen as upper limit for warming.
data upper_desired_temperature_range
  properties
    Data_Model::Real_Range => 98.0 .. 100.0;
    Data_Model::Measurement_Unit => "Fahrenheit";
end upper_desired_temperature_range;


-- Composite for communicating & validating desired temperature.
data upper_desired_temperature
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("temp", "valid");
  Data_Model::Base_Type => (classifier (upper_desired_temperature_range),
    classifier (valid_flag));
end upper_desired_temperature;


-- Range of air temperatures that can be chosen as lower limit for alarm.
data lower_alarm_temperature_range
  properties
    Data_Model::Real_Range => 93.0 .. 98.0;
    Data_Model::Measurement_Unit => "Fahrenheit";
end lower_alarm_temperature_range;


-- Composite for communicating & validating alarm temperature.
data lower_alarm_temperature
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("temp", "valid");
  Data_Model::Base_Type => (classifier (lower_alarm_temperature_range),
    classifier (valid_flag));
end lower_alarm_temperature;


-- Range of air temperatures that can be chosen as upper limit for alarm.
data upper_alarm_temperature_range
  properties
    Data_Model::Real_Range => 99.0 .. 103.0;
    Data_Model::Measurement_Unit => "Fahrenheit";
end upper_alarm_temperature_range;


-- Composite for communicating & validating alarm temperature.
data upper_alarm_temperature
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("temp", "valid");
  Data_Model::Base_Type => (classifier (upper_alarm_temperature_range),
    classifier (valid_flag));
end upper_alarm_temperature;


--------------------------------------------------------------------------------
-- Table A-6: Thermostat controlled variables for Operator Interface. 
--------------------------------------------------------------------------------

-- Enumerated type for use by thermostat regulator & monitor status. 
data op_status
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("INIT","ON","FAILED");
end op_status;


--------------------------------------------------------------------------------
-- Table A-7/A-12: Regulate/Monitor temperature internal variables.
--------------------------------------------------------------------------------

-- Enumerated type for use by thermostat regulator & monitor mode.
data op_mode
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("INIT","NORMAL","FAILED");
end op_mode;


end Iso_Types;
